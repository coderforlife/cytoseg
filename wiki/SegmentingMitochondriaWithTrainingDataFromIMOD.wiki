Instructions under construction (July 2011)

Convert your IMOD model file to a bitmap form:

imodmop -color model data output
model: model file
data: data file that goes with the model (mrc format)
output: output file (mrc format)

Here's an example:
imodmop -color /ncmirdata1/rgiuly/Gutmann_mito.mod /ncmirdata4/mterada/3View/Guttman_3month_wt/Guttman_3month_wt.preali.mrc guttman.mrc

Convert to tif's with mrc2tif

Here's an example
<code>
mkdir folderForTiffs
mrc2tif guttman.mrc folderForTiffs
</code>

Use convert command (a command from Image Magick) to convert the stack to 8 bit

For example from inside the folder with the tif's (folderForTiffs in this example), you can run this to do the conversion:

<code>
mkdir folderFor8bitFiles
ls *.tif | xargs -r -I FILE convert FILE -type Grayscale -depth 8 folderFor8bitFiles/FILE.8bit.tif
</code>

Make sure you have python installed according to instruction for installation

Download this file http://cytoseg.googlecode.com/files/cytoseg_mito_example.zip

You can download from the command line with:
<code>
wget http://cytoseg.googlecode.com/files/cytoseg_mito_example.zip
</code>

Unzip the file
<code> unzip cytoseg_mito_example.zip </code>

At your command line, go into the cytoseg/testing directory

Run sbfsem_batch_voxels_test like this:

sbfsem_batch_voxels_test input output --trainingData=test1 --trainingSeg=test2 --trainingLowerBound=1,2,3 --trainingUpperBound=4,5,6 --processingLowerBound=7,8,9 --processingUpperBound=10,11,12

input: the input folder with a stack of image files

output: toplevel folder for output of the process

--traningData specifies the folder with training data (can be the same as input)

--trainingSeg specifies the folder with segmentation bitmap stack

New folders and files will be created in the output folder you specified. Inside of the output folder, go to voxelOutput\mitochondria\composite to view your output in a convenient colorized form.

Inside of the output folder, voxelOutput\mitochondria\resized has a grayscale image of your output that can be thresholded with a program such as ImageJ to identify the structures of interest.
